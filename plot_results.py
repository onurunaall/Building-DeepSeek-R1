import argparse
import os
import pandas as pd
import matplotlib.pyplot as plt

def plot_metric(df: pd.DataFrame, metric: str, out_dir: str) -> None:
    plt.figure(figsize=(10, 6))
    bars = plt.bar(df["method"], df[metric], color=['#1f77b4', '#ff7f0e', '#2ca02c'])
    plt.ylabel(metric.capitalize())
    plt.title(f"Comparison of Fine-Tuning Methods for {metric.capitalize()}")
    plt.xticks(rotation=15)

    for bar in bars:
        yval = bar.get_height()
        plt.text(bar.get_x() + bar.get_width()/2.0, yval, f'{yval:.3f}', va='bottom', ha='center')

    fname = os.path.join(out_dir, f"{metric}_comparison.png")
    plt.savefig(fname, bbox_inches="tight")
    plt.close()
    print(f"Plot saved to {fname}")

def main(csv_path: str, out_dir: str) -> None:
    if not os.path.exists(csv_path):
        raise FileNotFoundError(f"Metrics CSV file not found: {csv_path}")

    os.makedirs(out_dir, exist_ok=True)
    df = pd.read_csv(csv_path)

    print("Metrics from all experiments:")
    print(df.to_string(index=False))

    metrics_to_plot = ["accuracy", "format", "reasoning"]
    for metric in metrics_to_plot:
        if metric in df.columns:
            plot_metric(df, metric, out_dir)
        else:
            print(f"[Warning] Metric '{metric}' not found in CSV.")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Plot fine-tuning evaluation metrics.")
    parser.add_argument(
        "--csv_path",
        default=os.path.join("data", "Qwen-FT-training", "all_metrics.csv"),
        help="Path to the consolidated metrics CSV file generated by main.py.",
    )
    parser.add_argument(
        "--out_dir",
        default="reports",
        help="Directory to save the output plots.",
    )
    args = parser.parse_args()
    main(args.csv_path, args.out_dir)
